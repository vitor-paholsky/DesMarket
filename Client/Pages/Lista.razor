@page "/lista"
@using DescontroladaMarket.Domain.Models;
@inject HttpClient Http
@using System.Globalization

<PageTitle>Lista Produtos</PageTitle>

<h1>Lista produtos</h1>

<table class="table">
    <thead>
        <tr>
            <th>Nome</th>
            <th>Preço de Venda</th>
            <th>Descrição</th>
            <th>Quantidade</th>
            <th>Orgânico</th>
            <th>Data de Cadastro</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var produto in Produtos.Skip((PaginaAtual - 1) * ItemsPorPagina).Take(ItemsPorPagina))
        {
            <tr>
                <td>@produto.Nome</td>
                <td>@formataMoeda(produto.PrecoVenda)</td>
                <td>@produto.Descricao</td>
                <td>@produto.Quantidade</td>
                <td>@(produto.Tipo ? "Sim" : "Não")</td>
                <td>@produto.DataCadastro.ToShortDateString()</td>
            </tr>
        }
    </tbody>
</table>

<button @onclick="PaginaAnterior" disabled="@(!AutPaginaAnterior)" class="btn btn-primary">❮ Anterior</button>
<button @onclick="ProximaPagina" disabled="@(!AutProximaPagina)" class="btn btn-primary">Próximo ❯</button>

@code {
    private List<Produtos> Produtos { get; set; } = new List<Produtos>();
    private int PaginaAtual { get; set; } = 1;
    private int ItemsPorPagina { get; set; } = 5;
    private bool AutPaginaAnterior => PaginaAtual > 1;
    private bool AutProximaPagina => PaginaAtual < (Math.Ceiling((decimal)Produtos.Count / ItemsPorPagina));

    string formataMoeda(decimal value)
    {
        var moedaBRL = CultureInfo.GetCultureInfo("pt-BR");
        return value.ToString("C", moedaBRL);
    }

    private void ProximaPagina()
    {
        if (AutProximaPagina) PaginaAtual++;
    }

    private void PaginaAnterior()
    {
        if (AutPaginaAnterior) PaginaAtual--;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Produtos = await Http.GetFromJsonAsync<List<Produtos>>("api/produtos");
        }
        catch (Exception)
        {
            Console.WriteLine("Erro ao puxar produtos cadastrados");
        }
    }
}